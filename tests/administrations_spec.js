// Generated by CoffeeScript 1.7.1
(function() {
  describe('The administrations page should', function() {
    beforeEach(function() {
      return visit("/administrations");
    });
    describe('have a model that', function() {
      it('should have a name property', function() {
        var nameProperty;
        nameProperty = App.Administration.metaForProperty('name');
        return expect(nameProperty.type).to.equal('string');
      });
      it('should have a color property', function() {
        var colorProperty;
        colorProperty = App.Administration.metaForProperty('color');
        return expect(colorProperty.type).to.equal('string');
      });
      return it('can be created', function() {
        return Ember.run(function() {
          var administration, store;
          store = App.__container__.lookup("controller:administrations").store;
          administration = store.createRecord("administration", {
            id: 1,
            name: 'TOM',
            color: '#ccc'
          });
          return expect(administration.get('name')).to.equal('TOM');
        });
      });
    });
    describe('should have an add new administrations button', function() {
      it('should direct to the new route when clicked', function() {
        return andThen(function() {
          expect(findWithAssert('a.add-administration')).to.exist;
          click('a.add-administration');
          return expect(currentURL()).to.equal('/administrations/new');
        });
      });
      it('should open a page to add a new administration', function() {
        return andThen(function() {
          click('a.add-administration');
          findWithAssert('form');
          findWithAssert('#name');
          findWithAssert('#color');
          return findWithAssert("button:submit");
        });
      });
      return it('should create a new administrations entry when create gets clicked', function() {
        return andThen(function() {
          click('a.add-administration');
          fillIn('#name', 'OPB');
          fillIn('#color', '#000');
          click('button:submit');
          return andThen(function() {
            return expect(currentURL()).to.equal('/administrations');
          });
        });
      });
    });
    return describe('have a table', function() {
      it('with a header and two columns', function() {
        return andThen(function() {
          findWithAssert('table.table');
          return expect(find('table.table thead tr th').length).to.equal(2);
        });
      });
      return describe('with a table body', function() {
        return it('that has rows of administrations', function() {
          return andThen(function() {
            return expect(find('table.table tbody tr').length).to.equal(2);
          });
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=administrations_spec.map
