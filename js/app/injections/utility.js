// Generated by CoffeeScript 1.7.1
(function() {
  Ember.Utility = Ember.Object.extend({
    updateOrSave: function(controller, administration) {
      var count, shouldSave;
      shouldSave = true;
      if (Ember.isEmpty(administration.get('name'))) {
        controller.notify.danger("Name cannot be empty.");
        shouldSave = false;
      }
      count = 0;
      controller.store.all('administration').forEach(function(record) {
        if (record.get('name') === administration.get('name')) {
          return count += 1;
        }
      });
      if (count > 1) {
        controller.notify.danger(administration.get('name') + " is already used.");
        shouldSave = false;
      }
      if (Ember.isEmpty(administration.get('color'))) {
        controller.notify.danger("Color cannot be empty.");
        shouldSave = false;
      }
      if (shouldSave) {
        return administration.save().then(function() {
          return controller.transitionToRoute('/administrations');
        });
      } else {
        return controller.transitionToRoute('/administrations/new');
      }
    },
    idFromURL: function(currentUrl) {
      var regex, result;
      regex = /([a-f0-9]{24})/;
      result = regex.exec(currentUrl) || ["", null];
      if (result != null) {
        result = regex.exec(App.__container__.lookup('router:main').get('url')) || ["", null];
      }
      return result[1];
    },
    colorLuminance: function(hex, lum) {
      var c, i, rgb;
      hex = String(hex).replace(/[^0-9a-f]/g, "");
      if (hex.length < 6) {
        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
      }
      lum = lum || 0;
      rgb = "#";
      c = void 0;
      i = void 0;
      i = 0;
      while (i < 3) {
        c = parseInt(hex.substr(i * 2, 2), 16);
        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);
        rgb += ("00" + c).substr(c.length);
        i++;
      }
      return rgb;
    }
  });

  Ember.Application.initializer({
    name: "registerUtilities",
    initialize: function(container, application) {
      application.register("utility:main", Ember.Utility);
    }
  });

  Ember.Application.initializer({
    name: "injectUtilities",
    initialize: function(container, application) {
      application.inject("controller", "utility", "utility:main");
      application.inject("route", "utility", "utility:main");
      application.inject("model", "utility", "utility:main");
      application.inject("view", "utility", "utility:main");
    }
  });

}).call(this);

//# sourceMappingURL=utility.map
