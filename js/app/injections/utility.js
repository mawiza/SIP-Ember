// Generated by CoffeeScript 1.7.1
(function() {
  Ember.Utility = Ember.Object.extend({
    idFromURL: function(currentUrl) {
      var regex, result;
      regex = /([a-f0-9]{24})/;
      result = regex.exec(currentUrl) || ["", null];
      if (result != null) {
        result = regex.exec(App.__container__.lookup('router:main').get('url')) || ["", null];
      }
      return result[1];
    },
    colorLuminance: function(hex, lum) {
      var c, i, rgb;
      hex = String(hex).replace(/[^0-9a-f]/g, "");
      if (hex.length < 6) {
        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
      }
      lum = lum || 0;
      rgb = "#";
      c = void 0;
      i = void 0;
      i = 0;
      while (i < 3) {
        c = parseInt(hex.substr(i * 2, 2), 16);
        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);
        rgb += ("00" + c).substr(c.length);
        i++;
      }
      return rgb;
    },
    d2h: function(d) {
      return d.toString(16);
    },
    h2d: function(h) {
      return parseInt(h, 16);
    },
    stringToHex: function(tmp) {
      var c, i, str, tmp_len;
      str = "";
      i = 0;
      tmp_len = tmp.length;
      c = void 0;
      while (i < tmp_len) {
        c = tmp.charCodeAt(i);
        str += this.d2h(c) + " ";
        i += 1;
      }
      return str;
    },
    hexToString: function(tmp) {
      var arr, arr_len, c, i, str;
      arr = tmp.split(" ");
      str = "";
      i = 0;
      arr_len = arr.length;
      c = void 0;
      while (i < arr_len) {
        c = String.fromCharCode(this.h2d(arr[i]));
        str += c;
        i += 1;
      }
      return str;
    }
  });

  Ember.Application.initializer({
    name: "registerUtilities",
    initialize: function(container, application) {
      application.register("utility:main", Ember.Utility);
    }
  });

  Ember.Application.initializer({
    name: "injectUtilities",
    initialize: function(container, application) {
      application.inject("controller", "utility", "utility:main");
      application.inject("route", "utility", "utility:main");
      application.inject("model", "utility", "utility:main");
      application.inject("view", "utility", "utility:main");
      application.inject("component", "utility", "utility:main");
    }
  });

}).call(this);

//# sourceMappingURL=utility.map
