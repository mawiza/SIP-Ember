(function(){Ember.Notify=Ember.ArrayProxy.extend({content:Ember.A(),timeout:5e3,pushObject:function(e){e.typeClass="alert-"+e.type,this._super(e)},danger:function(e){console.log("Notify: "+e),this.pushObject({type:"danger",message:e})},warning:function(e){console.log("Notify: "+e),this.pushObject({type:"warning",message:e})},info:function(e){console.log("Notify: "+e),this.pushObject({type:"info",message:e})},success:function(e){console.log("Notify: "+e),this.pushObject({type:"success",message:e})}}),Ember.Application.initializer({name:"registerNotifyMessages",initialize:function(e,t){t.register("notify:main",Ember.Notify)}}),Ember.Application.initializer({name:"injectNotifyMessages",initialize:function(e,t){t.inject("controller","notify","notify:main"),t.inject("component","notify","notify:main"),t.inject("route","notify","notify:main")}})}).call(this),function(){Ember.Utility=Ember.Object.extend({updateOrSave:function(e,t){var i,n;return n=!0,Ember.isEmpty(t.get("name"))&&(e.notify.danger("Name cannot be empty."),n=!1),i=0,e.store.all("administration").forEach(function(e){return e.get("name")===t.get("name")?i+=1:void 0}),i>1&&(e.notify.danger(t.get("name")+" is already used."),n=!1),Ember.isEmpty(t.get("color"))&&(e.notify.danger("Color cannot be empty."),n=!1),n?t.save().then(function(){return e.transitionToRoute("/administrations")}):e.transitionToRoute("/administrations/new")}}),Ember.Application.initializer({name:"registerUtilities",initialize:function(e,t){t.register("utility:main",Ember.Utility)}}),Ember.Application.initializer({name:"injectUtilities",initialize:function(e,t){t.inject("controller","utility","utility:main")}})}.call(this),function(){Ember.I18n.translations={application:{title:"Strategiske Indsatsplan",navbar:{index:"Oversigt",edit:"Redigere SIP",administrations:"Forvaltninger",themes:"Indsatsplaner",settings:"Indstillinger",about:"Om"},footer:{organization:"Herning Kommune"}},index:{heading:"Oversigt",description:""},administrations:{index:{add:"Tilføj forvaltning",name:"Forvaltning",color:"Farve"},"new":{heading:"Opret nye forvaltning",name:"Navn",color:"Farve",create:"Opret"},edit:{heading:"Redigere forvaltningen",name:"Navn",color:"Farve",update:"Opdatere","delete":"Slet",cancel:"Annullere",modal:{info:"Er du sikker at du vil gerne slette {{name}}"}}},themes:{index:{heading:"Temaer",add:"Tilføj tema",definition:"Beskrivelse"},"new":{heading:"Opret nye tema",definition:"Beksrivelse",create:"Opret"},edit:{heading:"Redigere tema",name:"Beskrivelse",update:"Opdatere","delete":"Slet",cancel:"Annullere",modal:{info:"Er du sikker at du vil gerne slette {{definition}}"}}},focusareas:{index:{heading:"Fokus områder",add:"Tilføj fokus område",definition:"Beskrivelse",theme:"Tema"},"new":{heading:"Opret nye fokus område",definition:"Beksrivelse",create:"Opret"},edit:{heading:"Redigere fokus område",name:"Beskrivelse",update:"Opdatere","delete":"Slet",cancel:"Annullere",modal:{info:"Er du sikker at du vil gerne slette {{definition}}"}}},notify:{danger:"Fejl",warning:"Bemærk",info:"Info",success:"Success"}}}.call(this),function(){Ember.Handlebars.helper("capitalize",function(e){return Ember.I18n.exists("notify."+e)?Ember.I18n.t("notify."+e):e.capitalize()}),window.App=Ember.Application.create(),App.ApplicationAdapter=DS.LSAdapter.extend({namespace:"sip"}),DS.LSAdapter.create({namespace:"sip"})}.call(this),function(){App.XNotifyComponent=Ember.Component.extend({classNames:"notify-messages",messages:Ember.computed.alias("notify")}),App.XNotifyMessageComponent=Ember.Component.extend({classNames:["x-notify-message-container"],classNameBindings:["insertState"],insertState:"pre-insert",didInsertElement:function(){var e;e=this,e.$().bind("webkitTransitionEnd",function(){"destroyed"===e.get("insertState")&&e.notify.removeObject(e.get("message"))}),Ember.run.later(function(){e.set("insertState","inserted")},250),e.notify.timeout&&Ember.run.later(function(){e.set("insertState","destroyed")},e.notify.timeout)},willDestroyElement:function(){var e;e=this,e.set("insertState","destroyed")},click:function(){var e;e=this,e.set("insertState","destroyed")}})}.call(this),function(){App.ColorPicker=Em.View.extend({didInsertElement:function(){return $("#color").colorpicker()}})}.call(this),function(){App.Administration=DS.Model.extend({name:DS.attr("string"),color:DS.attr("string"),style:function(){return"background-color:"+this.get("color")}.property("color")})}.call(this),function(){App.Theme=DS.Model.extend({definition:DS.attr("string"),focusareas:DS.hasMany("focusarea",{async:!0})})}.call(this),function(){App.Focusarea=DS.Model.extend({definition:DS.attr("string"),theme:DS.belongsTo("theme",{async:!0})})}.call(this),function(){App.Router.map(function(){return this.resource("administrations"),this.resource("administrations.new",{path:"/administrations/new"}),this.resource("administrations.edit",{path:"/administrations/edit/:administration_id"}),this.resource("themes",function(){return this.route("new"),this.route("edit",{path:"/edit/:theme_id"}),this.resource("focusareas",{path:"/:theme_id/focusareas"},function(){return this.route("new",{path:"/new"}),this.route("edit",{path:"/edit/:focusarea_id"})})}),this.resource("about"),this.resource("settings")})}.call(this),function(){App.AdministrationsRoute=Ember.Route.extend({model:function(){return this.store.find("administration")}}),App.AdministrationsNewRoute=Ember.Route.extend({model:function(){return this.store.createRecord("administration")}}),App.AdministrationsEditRoute=Ember.Route.extend({model:function(){return this.modelFor("administration")}})}.call(this),function(){App.ThemesIndexRoute=Ember.Route.extend({model:function(){return this.store.find("theme")},afterModel:function(e){return this.transitionTo("/themes/"+e.get("firstObject").get("id")+"/focusareas")}}),App.ThemesRoute=Ember.Route.extend({model:function(){return this.store.find("theme")},afterModel:function(e){return this.transitionTo("/themes/"+e.get("firstObject").get("id")+"/focusareas")}}),App.ThemesNewRoute=Ember.Route.extend({model:function(){return this.store.createRecord("theme")}}),App.ThemesEditRoute=Ember.Route.extend({model:function(e){return this.modelFor("theme",e)},setupController:function(e,t){var i;return this._super(e,t),i=this.store.find("focusarea",{theme:t.id}),i.then(function(){return e.set("focusareasLength",i.get("length"))})}})}.call(this),function(){App.FocusareasRoute=Ember.Route.extend({model:function(e){return this.store.find("focusarea",{theme:e.theme_id})}}),App.FocusareasIndexRoute=Ember.Route.extend({model:function(e){return this.store.find("focusarea",{theme:e.theme_id})}}),App.FocusareasNewRoute=Ember.Route.extend({model:function(){return this.store.createRecord("focusarea")},setupController:function(e,t){var i;return this._super(e,t),i=this.controllerFor("focusareas").get("model").get("query.theme"),e.set("theme_id",i)}}),App.FocusareasEditRoute=Ember.Route.extend({model:function(){return this.modelFor("focusarea")}})}.call(this),function(){App.AdministrationsController=Ember.ArrayController.extend({administrationsCount:function(){var e;return e=this.get("model.length"),e?e:0}.property("@each")})}.call(this),function(){App.AdministrationsNewController=Ember.ObjectController.extend({actions:{submit:function(){var e;return e=this.get("model"),this.utility.updateOrSave(this,e)},cancel:function(){return this.transitionToRoute("/administrations")}}})}.call(this),function(){App.AdministrationsEditController=Ember.ObjectController.extend({actions:{update:function(){var e;return e=this.get("model"),this.utility.updateOrSave(this,e)},"delete":function(){var e;return e=this.get("model"),e.destroyRecord(),this.transitionToRoute("/administrations")},cancel:function(){return this.transitionToRoute("/administrations")}}})}.call(this),function(){}.call(this),function(){App.ThemesNewController=Ember.ObjectController.extend({actions:{submit:function(){var e,t;return t=this.get("model"),e=!0,Ember.isEmpty(t.get("definition"))&&(this.notify.danger("Definition cannot be empty."),e=!1),e?(t.save(),this.transitionToRoute("/themes/"+t.get("id")+"/focusareas")):this.transitionToRoute("/themes/new")},cancel:function(){return this.get("model").rollback(),this.transitionToRoute("/themes")}}})}.call(this),function(){App.ThemesEditController=Ember.ObjectController.extend({actions:{update:function(){var e,t;return t=this.get("model"),e=!0,Ember.isEmpty(t.get("definition"))&&(this.notify.danger("Definition cannot be empty."),e=!1),e?(t.save(),this.transitionToRoute("/themes/"+t.get("id")+"/focusareas")):this.transitionToRoute("/themes/edit")},"delete":function(){var e,t;return t=this.get("model"),e=this.notify,0===this.get("focusareasLength")?(t.destroyRecord(),this.transitionToRoute("/themes")):(e.danger("Cannot delete "+t.get("definition")+". Please delete all the focus areas related to this theme first."),this.transitionToRoute("/themes/"+t.id+"/focusareas"))},cancel:function(){return this.get("model").rollback(),this.transitionToRoute("/themes/"+this.get("model").get("id")+"/focusareas")}}})}.call(this),function(){}.call(this),function(){App.FocusareasNewController=Ember.ObjectController.extend({needs:["focusareas"],actions:{submit:function(){var e,t;return e=this.get("model"),t=!0,Ember.isEmpty(e.get("definition"))&&(this.notify.danger("Definition cannot be empty."),t=!1),t?(this.store.find("theme",this.get("theme_id")).then(function(t){return t.get("focusareas").then(function(i){return i.pushObject(e),t.save(),e.save()})}),this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas")):this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas/new")},cancel:function(){return this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas")}}})}.call(this),function(){App.FocusareasEditController=Ember.ObjectController.extend({needs:["focusareas"],actions:{update:function(){var e,t;return e=this.get("model"),t=!0,Ember.isEmpty(e.get("definition"))&&(this.notify.danger("Definition cannot be empty."),t=!1),null==this.get("theme_id")&&(this.notify.danger("You have to create themes before creating focus areas!"),t=!1),t?(this.store.find("theme",this.get("theme_id")).then(function(t){return t.get("focusareas").then(function(i){return i.pushObject(e),t.save(),e.save()})}),this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas")):this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas/edit")},"delete":function(){var e;return e=this.get("model"),e.destroyRecord(),this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas")},cancel:function(){return this.get("model").rollback(),this.transitionToRoute("/themes/"+this.get("theme_id")+"/focusareas")}}})}.call(this);
//# sourceMappingURL=app-compiled.min.map