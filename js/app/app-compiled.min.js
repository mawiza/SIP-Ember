(function(){Ember.Notify=Ember.ArrayProxy.extend({content:Ember.A(),timeout:5e3,pushObject:function(e){e.typeClass="alert-"+e.type,this._super(e)},danger:function(e){console.log("Notify: "+e),this.pushObject({type:"danger",message:e})},warning:function(e){console.log("Notify: "+e),this.pushObject({type:"warning",message:e})},info:function(e){console.log("Notify: "+e),this.pushObject({type:"info",message:e})},success:function(e){console.log("Notify: "+e),this.pushObject({type:"success",message:e})}}),Ember.Application.initializer({name:"registerNotifyMessages",initialize:function(e,t){t.register("notify:main",Ember.Notify)}}),Ember.Application.initializer({name:"injectNotifyMessages",initialize:function(e,t){t.inject("controller","notify","notify:main"),t.inject("component","notify","notify:main"),t.inject("route","notify","notify:main")}})}).call(this),function(){Ember.Utility=Ember.Object.extend({updateOrSave:function(e,t){var i,n;return n=!0,Ember.isEmpty(t.get("name"))&&(e.notify.danger("Name cannot be empty."),n=!1),i=0,e.store.all("administration").forEach(function(e){return e.get("name")===t.get("name")?i+=1:void 0}),i>1&&(e.notify.danger(t.get("name")+" is already used."),n=!1),Ember.isEmpty(t.get("color"))&&(e.notify.danger("Color cannot be empty."),n=!1),n?t.save().then(function(){return e.transitionToRoute("/administrations")}):e.transitionToRoute("/administrations/new")},idFromURL:function(e){var t,i;return t=/([a-f0-9]{24})/,i=t.exec(e)||["",null],null!=i&&(i=t.exec(App.__container__.lookup("router:main").get("url"))||["",null]),i[1]},colorLuminance:function(e,t){var i,n,o;for(e=String(e).replace(/[^0-9a-f]/g,""),e.length<6&&(e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]),t=t||0,o="#",i=void 0,n=void 0,n=0;3>n;)i=parseInt(e.substr(2*n,2),16),i=Math.round(Math.min(Math.max(0,i+i*t),255)).toString(16),o+=("00"+i).substr(i.length),n++;return o}}),Ember.Application.initializer({name:"registerUtilities",initialize:function(e,t){t.register("utility:main",Ember.Utility)}}),Ember.Application.initializer({name:"injectUtilities",initialize:function(e,t){t.inject("controller","utility","utility:main"),t.inject("route","utility","utility:main"),t.inject("model","utility","utility:main")}})}.call(this),function(){Ember.I18n.translations={application:{title:"Strategiske Indsatsplan",navbar:{index:"Oversigt",strategies:"Planer",administrations:"Forvaltninger",themes:"Indsatsplaner",settings:"Indstillinger",about:"Om"},footer:{organization:"Herning Kommune"}},index:{heading:"Oversigt",description:""},strategies:{index:{heading:"Indsatsplaner"}},administrations:{index:{add:"Tilføj forvaltning",name:"Forvaltning",color:"Farve"},"new":{heading:"Opret nye forvaltning",name:"Navn",color:"Farve",create:"Opret"},edit:{heading:"Redigere forvaltningen",name:"Navn",color:"Farve",update:"Opdatere","delete":"Slet",cancel:"Annullere",modal:{info:"Er du sikker at du vil gerne slette forvaltning"}}},themes:{index:{heading:"Temaer",add:"Tilføj tema",definition:"Beskrivelse"},"new":{heading:"Opret nye tema",definition:"Beksrivelse",create:"Opret"},edit:{heading:"Redigere tema",name:"Beskrivelse",update:"Opdatere","delete":"Slet",cancel:"Annullere",modal:{info:"Er du sikker at du vil gerne denne slette tema"}}},focusareas:{index:{heading:"Fokus områder",add:"Tilføj fokus område",definition:"Beskrivelse",theme:"Tema"},"new":{heading:"Opret nye fokus område",definition:"Beksrivelse",create:"Opret"},edit:{heading:"Redigere fokus område",name:"Beskrivelse",update:"Opdatere","delete":"Slet",cancel:"Annullere",modal:{info:"Er du sikker at du vil gerne slette denne fokus område"}}},notify:{danger:"Fejl",warning:"Bemærk",info:"Info",success:"Success"}}}.call(this),function(){Ember.Handlebars.helper("capitalize",function(e){return Ember.I18n.exists("notify."+e)?Ember.I18n.t("notify."+e):e.capitalize()}),Ember.MODEL_FACTORY_INJECTIONS=!0,window.App=Ember.Application.create({LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_VIEW_LOOKUPS:!0,LOG_BINDINGS:!0,LOG_ACTIVE_GENERATION:!0,LOG_DEBUG:!0,log:function(e,t,i){return this.LOG_DEBUG?null!=i?("object"==typeof i&&(i=Ember.inspect(i)),console.log("DEBUG: "+this.appName+" : "+t+" : "+e),console.log("DEBUG: (continued) data: "+i)):console.log("DEBUG: "+this.appName+" : "+t+" : "+e):void 0}}),App.ApplicationAdapter=DS.RESTAdapter.extend({namespace:"api",host:"http://127.0.0.1:4567",corsWithCredentials:!0})}.call(this),function(){App.XNotifyComponent=Ember.Component.extend({classNames:"notify-messages",messages:Ember.computed.alias("notify")}),App.XNotifyMessageComponent=Ember.Component.extend({classNames:["x-notify-message-container"],classNameBindings:["insertState"],insertState:"pre-insert",didInsertElement:function(){var e;e=this,e.$().bind("webkitTransitionEnd",function(){"destroyed"===e.get("insertState")&&e.notify.removeObject(e.get("message"))}),Ember.run.later(function(){e.set("insertState","inserted")},250),e.notify.timeout&&Ember.run.later(function(){e.set("insertState","destroyed")},e.notify.timeout)},willDestroyElement:function(){var e;e=this,e.set("insertState","destroyed")},click:function(){var e;e=this,e.set("insertState","destroyed")}})}.call(this),function(){App.ColorPicker=Ember.View.extend({didInsertElement:function(){return $("#color").colorpicker()}})}.call(this),function(){App.StrategyTabAnchorView=Ember.View.extend({tagName:"a",didInsertElement:function(){return this.$().attr("href","#/strategies/administration/"+this.get("administration_id"))},click:function(){return console.log("clicked",this.get("administration_id")),$(".strategies-administrations-tab").removeClass("active"),$("#"+this.get("administration_id")).addClass("active")}})}.call(this),function(){App.AdministrationSerializer=DS.ActiveModelSerializer.extend(DS.EmbeddedRecordsMixin).extend({attrs:{strategies:{serialize:"ids",deserialize:"ids"}}}),App.Administration=DS.Model.extend({name:DS.attr("string"),color:DS.attr("string"),strategies:DS.hasMany("strategy",{async:!0}),style:function(){return"background-color:"+this.get("color")}.property("color"),tabStyle:function(){return"background-color:"+this.get("color")+";width: 100%; height: 5px;"}.property("color"),shadedTabStyle:function(){return"background-color:"+this.utility.colorLuminance(this.get("color"),.4)+";width: 100%; height: 3px;"}.property("color"),hashedID:function(){return"#"+this.get("id")}.property("id")})}.call(this),function(){App.ThemeSerializer=DS.ActiveModelSerializer.extend(DS.EmbeddedRecordsMixin).extend({attrs:{focusareas:{serialize:"ids",deserialize:"ids"}}}),App.Theme=DS.Model.extend({definition:DS.attr("string"),focusareas:DS.hasMany("focusarea",{async:!0}),hashedID:function(){return"#"+this.get("id")}.property("id")})}.call(this),function(){App.FocusareaSerializer=DS.ActiveModelSerializer.extend(DS.EmbeddedRecordsMixin).extend({attrs:{strategies:{serialize:"ids",deserialize:"ids"}}}),App.Focusarea=DS.Model.extend({definition:DS.attr("string"),theme:DS.belongsTo("theme",{embedded:!0}),strategies:DS.hasMany("strategy",{async:!0}),hashedID:function(){return"#"+this.get("id")}.property("id")})}.call(this),function(){App.Strategy=DS.Model.extend({description:DS.attr("string"),administration:DS.belongsTo("administration",{embedded:!0}),focusarea:DS.belongsTo("focusarea",{embedded:!0})})}.call(this),function(){App.Router.map(function(){return this.resource("administrations"),this.resource("administrations.new",{path:"/administrations/new"}),this.resource("administrations.edit",{path:"/administrations/edit/:administration_id"}),this.resource("themes",function(){return this.route("new"),this.route("edit",{path:"/edit/:theme_id"}),this.resource("focusareas",{path:"/:theme_id/focusareas"},function(){return this.route("new",{path:"/new"}),this.route("edit",{path:"/edit/:focusarea_id"})})}),this.resource("strategies",function(){return this.resource("strategies.administration",{path:"/administration/:administration_id"})}),this.resource("about"),this.resource("settings")})}.call(this),function(){App.AdministrationsRoute=Ember.Route.extend({model:function(){return this.store.find("administration")}}),App.AdministrationsNewRoute=Ember.Route.extend({model:function(){return this.store.createRecord("administration")}}),App.AdministrationsEditRoute=Ember.Route.extend({model:function(){return this.modelFor("administration")}})}.call(this),function(){App.ThemesIndexRoute=Ember.Route.extend({model:function(e){return App.log("Loading the model for theme","App.ThemesIndexRoute.model",e),this.store.find("theme")},afterModel:function(e){var t;return t=this.utility.idFromURL(window.location.href),null!=t?(console.log("THEME-ID->",t),this.transitionTo("/themes/"+t+"/focusareas")):this.transitionTo("/themes/"+e.get("firstObject").get("id")+"/focusareas")}}),App.ThemesRoute=Ember.Route.extend({model:function(){return App.log("Loading the model for theme","App.ThemesRoute.model"),this.store.find("theme")},afterModel:function(e){var t;return t=this.utility.idFromURL(window.location.href),this.transitionTo(null!=t?"/themes/"+t+"/focusareas":null!=e.get("firstObject")?"/themes/"+e.get("firstObject").get("id")+"/focusareas":"/themes/new")}}),App.ThemesNewRoute=Ember.Route.extend({model:function(){return App.log("Loading the model for theme","App.ThemesNewRoute.model"),this.store.createRecord("theme")}}),App.ThemesEditRoute=Ember.Route.extend({model:function(e){return App.log("Loading the model for theme","App.ThemesEditRoute.model",e),this.modelFor("theme",e)},setupController:function(e,t){var i;return this._super(e,t),i=this.store.find("focusarea",{theme:t.id}),i.then(function(){return App.log("Setting up the controller for edit theme","App.ThemesEditRoute.setupController",i),e.set("focusareasLength",i.get("length"))})}})}.call(this),function(){App.FocusareasRoute=Ember.Route.extend({model:function(e){return console.log("params:",e),this.store.filter("focusarea",{},function(t){return t.get("data.theme.id")===e.theme_id?!0:void 0})}}),App.FocusareasNewRoute=Ember.Route.extend({model:function(){var e;return e=this.store.createRecord("focusarea")}}),App.FocusareasEditRoute=Ember.Route.extend({model:function(){return this.modelFor("focusarea")}})}.call(this),function(){App.StrategiesRoute=Ember.Route.extend({model:function(){return this.store.findAll("administration")},afterModel:function(e){var t;return null!=e.get("firstObject")?(t=e.get("firstObject").get("id"),this.transitionTo("/strategies/administration/"+t)):void 0}})}.call(this),function(){App.StrategiesAdministrationRoute=Ember.Route.extend({model:function(e){return console.log("StrategiesAdministrationRoute params:",e),this.store.findAll("theme")}})}.call(this),function(){App.AdministrationsController=Ember.ArrayController.extend({administrationsCount:function(){var e;return e=this.get("model.length"),e?e:0}.property("@each")})}.call(this),function(){App.AdministrationsNewController=Ember.ObjectController.extend({actions:{submit:function(){var e;return e=this.get("model"),this.utility.updateOrSave(this,e)},cancel:function(){return this.transitionToRoute("/administrations")}}})}.call(this),function(){App.AdministrationsEditController=Ember.ObjectController.extend({actions:{update:function(){var e;return e=this.get("model"),this.utility.updateOrSave(this,e)},"delete":function(){var e,t;return t=this,e=this.get("model"),e.destroyRecord().then(function(){return t.transitionToRoute("/administrations")})},cancel:function(){return this.transitionToRoute("/administrations")}}})}.call(this),function(){}.call(this),function(){App.ThemesNewController=Ember.ObjectController.extend({actions:{submit:function(){var e,t,i;return i=this.get("model"),t=!0,Ember.isEmpty(i.get("definition"))&&(this.notify.danger("Definition cannot be empty."),t=!1),t?(e=this,i.save().then(function(t){return App.log("Saving the theme and transitioning to the theme's focusareas","App.ThemesNewController.submit",t.get("id")),e.transitionToRoute("/themes/"+i.get("id")+"/focusareas")})):this.transitionToRoute("/themes/new")},cancel:function(){return this.get("model").rollback(),this.transitionToRoute("/themes")}}})}.call(this),function(){App.ThemesEditController=Ember.ObjectController.extend({actions:{update:function(){var e,t;return t=this.get("model"),e=!0,Ember.isEmpty(t.get("definition"))&&(this.notify.danger("Definition cannot be empty."),e=!1),e?(t.save(),this.transitionToRoute("/themes/"+t.get("id")+"/focusareas")):this.transitionToRoute("/themes/edit")},"delete":function(){var e,t;return t=this.get("model"),0===this.get("focusareasLength")?(e=this,console.log("theme",t.get("id")),App.log("Deleting the theme without focusareas","App.ThemesEditController.delete",this.get("focusareasLength")),t.destroyRecord().then(function(){return e.transitionToRoute("/themes")})):(App.log("Not deleting the theme with focusareas","App.ThemesEditController.delete",this.get("focusareasLength")),this.notify.danger("Cannot delete "+t.get("definition")+". Please delete all the focus areas related to this theme first."),this.transitionToRoute("/themes/"+t.get("id")+"/focusareas"))},cancel:function(){return this.get("model").rollback(),this.transitionToRoute("/themes/"+this.get("model").get("id")+"/focusareas")}}})}.call(this),function(){App.FocusareasController=Ember.ArrayController.extend()}.call(this),function(){App.FocusareasNewController=Ember.ObjectController.extend({actions:{submit:function(){var e,t,i,n;return e=this.get("model"),i=!0,n=this.utility.idFromURL(window.location.href),Ember.isEmpty(e.get("definition"))&&(this.notify.danger("Definition cannot be empty."),i=!1),i?(t=this,this.store.find("theme",n).then(function(i){return e.set("theme",i),e.save().then(function(){return i.get("focusareas").pushObject(e),i.save().then(function(e){return console.log("SUCCESSFULL SAVE",e)},function(e){return console.log("API error occured - "+e.responseText)}),t.transitionToRoute("/themes/"+n+"/focusareas")})})):this.transitionToRoute("/themes/"+n+"/focusareas/new")},cancel:function(){return this.transitionToRoute("/themes/"+this.utility.idFromURL(window.location.href)+"/focusareas")}}})}.call(this),function(){App.FocusareasEditController=Ember.ObjectController.extend({actions:{update:function(){var e,t,i,n;return e=this.get("model"),i=!0,n=this.utility.idFromURL(window.location.href),Ember.isEmpty(e.get("definition"))&&(this.notify.danger("Definition cannot be empty."),i=!1),null==n&&(this.notify.danger("You have to create themes before creating focus areas!"),i=!1),i?(t=this,this.store.find("theme",n).then(function(i){return e.set("theme",i),e.save().then(function(){return t.transitionToRoute("/themes/"+n+"/focusareas")})})):this.transitionToRoute("/themes/"+n+"/focusareas/edit")},"delete":function(){var e,t;return t=this,e=this.get("model"),e.destroyRecord().then(function(){return t.transitionToRoute("/themes/"+t.utility.idFromURL(window.location.href)+"/focusareas")})},cancel:function(){return this.get("model").rollback(),this.transitionToRoute("/themes/"+this.utility.idFromURL(window.location.href)+"/focusareas")}}})}.call(this),function(){App.StrategiesController=Ember.ArrayController.extend()}.call(this),function(){App.StrategiesAdministrationController=Ember.ArrayController.extend({needs:"strategies",strategies:Ember.computed.alias("controllers.strategies"),administration_id:function(){return this.utility.idFromURL(window.location.href)}.property("route.strategies.currentPath")})}.call(this);
//# sourceMappingURL=app-compiled.min.map