// Generated by CoffeeScript 1.7.1
(function() {
  Ember.Application.initializer({
    name: "registerNotifyMessages",
    initialize: function(container, application) {
      application.register("notify:main", Ember.Notify);
    }
  });

  Ember.Notify = Ember.ArrayProxy.extend({
    content: Ember.A(),
    timeout: 5000,
    pushObject: function(object) {
      object.typeClass = "alert-" + object.type;
      this._super(object);
    },
    danger: function(message) {
      this.pushObject({
        type: "danger",
        message: message
      });
    },
    warning: function(message) {
      this.pushObject({
        type: "warning",
        message: message
      });
    },
    info: function(message) {
      this.pushObject({
        type: "info",
        message: message
      });
    },
    success: function(message) {
      this.pushObject({
        type: "success",
        message: message
      });
    }
  });

  Ember.Handlebars.helper("capitalize", function(value) {
    if (Ember.I18n.exists('notify.' + value)) {
      return Ember.I18n.t('notify.' + value);
    } else {
      return value.capitalize();
    }
  });

  Ember.Application.initializer({
    name: "injectNotifyMessages",
    initialize: function(container, application) {
      application.inject("controller", "notify", "notify:main");
      application.inject("component", "notify", "notify:main");
      application.inject("route", "notify", "notify:main");
    }
  });

  window.App = Ember.Application.create();

  App.ApplicationAdapter = DS.LSAdapter.extend({
    namespace: 'sip'
  });

  DS.LSAdapter.create({
    namespace: 'sip'
  });

  App.XNotifyComponent = Ember.Component.extend({
    classNames: "notify-messages",
    messages: Ember.computed.alias("notify")
  });

  App.XNotifyMessageComponent = Ember.Component.extend({
    classNames: ["x-notify-message-container"],
    classNameBindings: ["insertState"],
    insertState: "pre-insert",
    didInsertElement: function() {
      var self;
      self = this;
      self.$().bind("webkitTransitionEnd", function(event) {
        if (self.get("insertState") === "destroyed") {
          self.notify.removeObject(self.get("message"));
        }
      });
      Ember.run.later((function() {
        self.set("insertState", "inserted");
      }), 250);
      if (self.notify.timeout) {
        Ember.run.later((function() {
          self.set("insertState", "destroyed");
        }), self.notify.timeout);
      }
    },
    click: function() {
      var self;
      self = this;
      self.set("insertState", "destroyed");
    }
  });

}).call(this);

//# sourceMappingURL=app.map
